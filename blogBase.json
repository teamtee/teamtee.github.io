{"singlePage": ["about"], "startSite": "", "filingNum": "", "onePageListNum": 15, "commentLabelColor": "#006b75", "yearColorList": ["#bc4c00", "#0969da", "#1f883d", "#A333D0"], "i18n": "CN", "themeMode": "manual", "dayTheme": "light", "nightTheme": "dark_colorblind", "urlMode": "pinyin", "script": "", "style": "", "head": "", "indexScript": "", "indexStyle": "", "bottomText": "\u8f6c\u8f7d\u8bf7\u6ce8\u660e\u51fa\u5904", "showPostSource": 1, "iconList": {"music": "M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8Zm8-6.5a6.5 6.5 0 1 0 0 13 6.5 6.5 0 0 0 0-13Z"}, "UTC": 8, "rssSplit": "sentence", "exlink": {}, "needComment": 0, "allHead": "", "title": "teamtee", "subTitle": "\u8fd9\u91cc\u662f\u63d0\u59c6\u63d0\u7684\u65b0\u5c0f\u5c4b\uff0c\u65e7\u5c0f\u5c4b\u53ef\u4ee5\u53bb[\u8fd9\u91cc](http://teamtee.top/teamtee/)", "avatarUrl": "https://github.githubassets.com/favicons/favicon.svg", "GMEEK_VERSION": "last", "displayTitle": "Teamtee", "homeUrl": "http://teamtee.top", "faviconUrl": "https://github.githubassets.com/favicons/favicon.svg", "email": "2624071330@qq.com", "primerCSS": "<link href='https://mirrors.sustech.edu.cn/cdnjs/ajax/libs/Primer/21.0.7/primer.css' rel='stylesheet' />", "postListJson": {"P2": {"htmlDir": "docs/post/yi-wen-gao-dong-Whisper-xi-lie-1--shi-yong-Whisper-jin-xing-shi-bie-he-te-zheng-ti-qu.html", "labels": ["QuickNote"], "postTitle": "\u4e00\u6587\u641e\u61c2Whisper\u7cfb\u52171:\u4f7f\u7528Whisper\u8fdb\u884c\u8bc6\u522b\u548c\u7279\u5f81\u63d0\u53d6", "postUrl": "post/yi-wen-gao-dong-Whisper-xi-lie-1--shi-yong-Whisper-jin-xing-shi-bie-he-te-zheng-ti-qu.html", "postSourceUrl": "https://github.com/teamtee/teamtee.github.io/issues/2", "commentNum": 0, "wordCount": 4321, "description": "\r\n\r\n[Whisper\u7684PT\u6587\u4ef6\u4e0b\u8f7d\u5730\u5740](https://gitcode.csdn.net/65ed73ad1a836825ed799909.html)\r\n[\u5728Colab\u5fae\u8c03Whisper](https://huggingface.co/blog/fine-tune-whisper)\r\n\r\n## Whisper\u7b80\u4ecb\r\n\r\nWhisper\u662fOpenai\u5f00\u53d1\u7684\u8bed\u97f3\u8bc6\u522b\u5de5\u5177\uff0c\u901a\u5e38\u6211\u4eec\u53ef\u4ee5\u7528Whisper\u5e93\u6216\u8005Transformers\u6765\u4f7f\u7528Whisper\uff0c\u672c\u6587\u4e13\u6ce8\u4e8eWhisper\u5e93\u7684\u4f7f\u7528\uff0c\u5b89\u88c5\u65b9\u5f0f\u5982\u4e0b\r\n\r\n```python\r\npip install -U openai-whisper\r\n```\r\n\r\n\u8fd8\u9700\u8981\u5b89\u88c5ffmpeg\r\n```\r\nconda install ffmpeg(\u652f\u6301\u975esudo\u7528\u6237)\r\nsudo apt install ffmpeg \r\n```\r\n\r\nWhisper\u5305\u542bencoder\u548cdecoder\u4e24\u4e2a\u90e8\u5206,encoder\u63a5\u53d730s\u7684\u97f3\u9891\u957f\u5ea6\u7684\u8f93\u51fa\uff0c\u7f16\u7801\u6210\u4e3a\u7279\u5f81\u5411\u91cf\uff0cdecoder\u8d1f\u8d23\u89e3\u7801\r\n\r\n\r\n## Whisper\u8bc6\u522b\r\n`transcribe`:\r\n- \u6700\u7b80\u5355\u7684\u8bc6\u522b\u65b9\u5f0f\r\n```python\r\nimport whisper\r\nmodel = whisper.load('path/name')\r\ntext = model.transcribe('wav_path')\r\n\r\n```\r\n`decode`\uff1a\r\n- \u6ce8\u610f\u5230\u97f3\u9891\u4f1a\u88ab`pad_or_trim`\u51fd\u6570\u586b\u5145\u6216\u8005\u88c1\u526a\u4e3a30s\u957f\u5ea6\r\n- `decode`\u652f\u6301`mel`\u8f93\u5165\u6216\u8005`encoder`\u7f16\u7801\u540e\u7684\u7279\u5f81\u8f93\u5165\r\n- `nmels=80/128`,128\u9002\u5408v3\uff0c80\u9002\u5408\u5176\u4ed6\u7248\u672c\r\n```python\r\nimport whisper\r\nimport numpy as np\r\nmodel = whisper.load_model('')\r\naudio = whisper.load_audio('')\r\naudio = whisper.pad_or_trim(audio)\r\nmel = whisper.log_mel_spectrogram(audio,n_mels=model.dims.n_mels).to('cuda').to(model.device)\r\nresult = model.decode(mel)\r\n# result = whisper.decode(model, mel)\r\n\r\n\r\n```\r\n\r\n```python\r\nimport whisper\r\nimport numpy as np\r\nmodel = whisper.load_model('')\r\naudio = whisper.load_audio('')\r\naudio = whisper.pad_or_trim(audio)\r\nmel = whisper.log_mel_spectrogram(audio,n_mels=model.dims.n_mels).to('cuda').to(model.device)\r\nresult =model.decode(mel)\r\nencoder_output = model.encoder(mel.unsqueeze(0))\r\n\r\nresult = model.decode(encoder_output)\r\n# result = whisper.decode(model, encoder_output)\r\n# \u6253\u5370encoder\u8f93\u51fa\u7684\u5f62\u72b6\r\n```\r\n## Whisper\u63d0\u53d6\u7279\u5f81\r\n\u5982\u679c\u91c7\u7528whisper\u7684encoder\u63d0\u53d6\u7279\u5f81\uff0c\u97f3\u9891\u9996\u5148\u8981\u88ab\u586b\u5145\u523030s\r\n```python\r\nimport whisper\r\nimport numpy as np\r\nmodel = whisper.load_model('')\r\naudio = whisper.load_audio('')\r\naudio = whisper.pad_or_trim(audio)\r\nmel = whisper.log_mel_spectrogram(audio,n_mels=model.dims.n_mels).to('cuda').to(model.device)\r\nresult =model.decode(mel)\r\nencoder_output = model.encoder(mel.unsqueeze(0))\r\n\r\n```\r\n\r\n\u53ef\u4ee5\u91c7\u7528\u66ff\u4ee3forward\u51fd\u6570\u7684\u65b9\u6cd5\u6765\u63d0\u53d6\u4e0d\u5b9a\u957f\u5ea6\u7684\u7279\u5f81,\u56e0\u4e3aencoder\u4e0d\u652f\u6301\u5c0f\u4e8e30s\u957f\u5ea6\u97f3\u9891\u7684\u539f\u56e0\u5728\u4e8e\r\n- `x = (x + self.positional_embedding).to(x.dtype)`\r\n\r\n```python\r\nimport types\r\nimport whisper\r\nimport torch\r\nimport torch.nn as nn\r\nimport torch.nn.functional as F\r\ndef whisper_encoder_forward_monkey_patch(self, x: torch.Tensor):\r\n\t'''\r\n\tx : torch.Tensor, shape = (batch_size, n_mels, n_ctx)\r\n\tthe mel spectrogram of the audio\r\n\t'''\r\n\tx = F.gelu(self.conv1(x))\r\n\tx = F.gelu(self.conv2(x))\r\n\tx = x.permute(0, 2, 1)\r\n\t# assert x.shape[1:] == self.positional_embedding.shape, 'incorrect audio shape'\r\n\t# x = (x + self.positional_embedding).to(x.dtype)\r\n\tx = (x + self.positional_embedding[: x.shape[1]]).to(x.dtype)\r\n\tfor block in self.blocks:\r\n\t\tx = block(x)\r\n\t\tx = self.ln_post(x)\r\n\treturn x\r\n```\r\n\r\n```python\r\n\r\nencoder = whisper.load_model('base').encoder\r\nencoder.whisper_encoder_forward_monkey_patch = types.MethodType(whisper_encoder_forward_monkey_patch, encoder)\r\naudio_path = ''\r\naudio = whisper.load_audio(audio_path)\r\nmel = whisper.log_mel_spectrogram(audio).to(model.device)\r\nfeatures = encoder.whisper_encoder_forward_monkey_patch(mel.unsqueeze(0))\r\n```\r\n\r\n```python\r\nwhisper.model.AudioEncoder.forward = forward\r\nmodel = whisper.load_model('')\r\naudio = whisper.load_audio('')\r\nmel = whisper.log_mel_spectrogram(audio,n_mels=model.dims.n_mels).to('cuda').to(model.device).unsquenze(0)\r\noutout = model.encoder(mel)\r\n```\r\n\u5982\u679c\u9700\u8981whisper\u63d0\u53d6\u51fa\u7684\u8be5\u7279\u5f81\u8fdb\u884c\u89e3\u7801\uff0c\u5fc5\u987b\u4f7f\u7528options\r\n\r\n```python\r\noptions = whisper.DecodingOptions(\r\n\u00a0 \u00a0 task='transcribe',\r\n\u00a0 \u00a0 language='zh',\r\n\u00a0 \u00a0 without_timestamps=True,\r\n\u00a0 \u00a0 beam_size=4,\r\n\r\n)\r\nprint(whisper.decode(model,mel,options))\r\n```\r\n\r\n## Whisper Options\r\n- `task`:\u9ed8\u8ba4\u4e3a`transcribe`\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4e3a`translate`,\u5373\u4e3a\u5c06\u8f93\u51fa\u7ffb\u8bd1\u4e3a\u82f1\u8bed\r\n\r\n\r\n\r\n## Huggingface\u7528\u6cd5\r\n```python\r\nfrom transformers import WhisperForConditionalGeneration, WhisperProcessor\r\n# \u52a0\u8f7d\u9884\u8bad\u7ec3\u7684Whisper\u6a21\u578b\u548c\u5904\u7406\u5668\r\nmodel = WhisperForConditionalGeneration.from_pretrained('openai/whisper-base')\r\nprocessor = WhisperProcessor.from_pretrained('openai/whisper-base')\r\n# \u5047\u8bbe\u4f60\u6709\u4e00\u4e2a\u8f93\u5165\u7684\u8bed\u97f3\u7279\u5f81\r\ninput_features = ...  # \u8fd9\u91cc\u5e94\u8be5\u662f\u9884\u5904\u7406\u540e\u7684\u8bed\u97f3\u7279\u5f81\r\n# \u5c06\u8f93\u5165\u7279\u5f81\u79fb\u52a8\u5230\u6a21\u578b\u6240\u5728\u7684\u8bbe\u5907\u4e0a\r\ninput_features = input_features.to(model.device)\r\n# \u4f7f\u7528\u5206\u5757\u7b97\u6cd5\u751f\u6210\u8f93\u51fa\r\noutputs = model.generate(\r\n    input_features=input_features,\r\n    return_dict_in_generate=True,\r\n    output_hidden_states=True,\r\n    chunk_length=30,  # \u8bbe\u7f6e\u5206\u5757\u957f\u5ea6\r\n    stride_length=15  # \u8bbe\u7f6e\u6b65\u957f\r\n)\r\n# \u89e3\u7801\u751f\u6210\u7684\u5e8f\u5217\r\ntranscriptions = processor.batch_decode(outputs.sequences, skip_special_tokens=True)[0]\r\n# \u6253\u5370\u8f6c\u5f55\u7ed3\u679c\r\nprint(transcriptions)\r\n\r\n```\u3002", "top": 0, "createdAt": 1733993645, "style": "", "script": "", "head": "", "ogImage": "https://github.githubassets.com/favicons/favicon.svg", "createdDate": "2024-12-12", "dateLabelColor": "#bc4c00"}, "P3": {"htmlDir": "docs/post/Pytorch-fu-xi-xi-lie-0--juan-shou-yu.html", "labels": ["QuickNote"], "postTitle": "Pytorch\u590d\u4e60\u7cfb\u52170:\u5377\u9996\u8bed", "postUrl": "post/Pytorch-fu-xi-xi-lie-0--juan-shou-yu.html", "postSourceUrl": "https://github.com/teamtee/teamtee.github.io/issues/3", "commentNum": 0, "wordCount": 658, "description": "# \u524d\u8a00\r\n\r\n\u5728\u52a8\u7b14\u5199\u4e0b\u8fd9\u7bc7\u7cfb\u5217\u7684\u7b2c\u4e00\u7bc7\u535a\u5ba2\u5f00\u59cb\uff0c\u6211\u5c31\u5fc5\u987b\u8981\u63d0\u9192\u81ea\u5df1\uff0c\u4e3a\u4ec0\u4e48\u8981\u5199\u4e0b\u300aPytorch\u5165\u95e8\u300b\u7684\u535a\u5ba2\uff0c\u5e02\u9762\u4e0a\u4e0d\u662f\u6709\u5f88\u591a\u7b14\u8bb0\u548c\u6559\u7a0b\u4e86\u5417\uff0c\u751a\u81f3\u4f60\u81ea\u5df1\u90fd\u662f\u901a\u8fc7\u8fd9\u4e9b\u8d44\u6599\u6765\u5165\u95e8Pytorch\u7684\uff0c\u8fd8\u9700\u8981\u4f60\u5199\u5165\u95e8\u6559\u7a0b\u5417\uff1f\r\n\r\n\u786e\u5b9e\u662f\u7684\uff0c\u6211\u60f3\u5e02\u9762\u4e0a\u7684\u8d44\u6599\u5df2\u7ecf\u5f88\u5168\u4e86\uff0c\u4f46\u662f\u6211\u89c9\u5f97\u8fd8\u6709\u4e00\u4e9b\u4e0d\u8db3\uff1a\r\n- \u7f3a\u4e4f\u7cfb\u7edf\u6027\uff1a\u7cfb\u7edf\u6027\u6307\u7684\u662f\u4e24\u4e2a\u65b9\u9762\uff0c\u77e5\u8bc6\u7684\u7ed3\u6784\u6027\u548c\u5c42\u6b21\u6027\uff0c\u5e02\u9762\u4e0a\u7684\u8d44\u6599\u5f80\u5f80\u662f\u5206\u6563\u7684\uff0c\u7f3a\u4e4f\u4ece\u4e00\u4e2a\u7cfb\u7edf\u7684\u89d2\u5ea6\u6765\u9610\u660e\u8981\u4e49\uff0c\u603b\u662f\u5c40\u9650\u4e8e\u67d0\u4e00\u79cd\u5e94\u7528\uff0c\u5e76\u4e14\u77e5\u8bc6\u5f80\u5f80\u4e0d\u5177\u5907\u5c42\u6b21\u6027\uff0c\u8981\u4e48\u8fc7\u6df1\uff0c\u8981\u4e48\u8fc7\u6d45\uff0c\u8981\u4e48\u8fc7\u5ea6\u7684\u96be\u5ea6\u8fc7\u4e8e\u9661\u5ced\u3002", "top": 0, "createdAt": 1734781125, "style": "", "script": "", "head": "", "ogImage": "https://github.githubassets.com/favicons/favicon.svg", "createdDate": "2024-12-21", "dateLabelColor": "#bc4c00"}, "P4": {"htmlDir": "docs/post/Pytorch-fu-xi-xi-lie-1-Tensor-zhang-liang.html", "labels": ["QuickNote"], "postTitle": "Pytorch\u590d\u4e60\u7cfb\u52171:Tensor\u5f20\u91cf", "postUrl": "post/Pytorch-fu-xi-xi-lie-1-Tensor-zhang-liang.html", "postSourceUrl": "https://github.com/teamtee/teamtee.github.io/issues/4", "commentNum": 0, "wordCount": 3003, "description": "# \u524d\u8a00\r\n\r\nPytorch\u8ba1\u7b97\u7684\u57fa\u672c\u5355\u4f4d\u5c31\u662fTensor,\u4e2d\u6587\u540d\u5f20\u91cf\u3002", "top": 0, "createdAt": 1734781247, "style": "", "script": "", "head": "", "ogImage": "https://github.githubassets.com/favicons/favicon.svg", "createdDate": "2024-12-21", "dateLabelColor": "#bc4c00"}, "P5": {"htmlDir": "docs/post/Pytorch-fu-xi-xi-lie-2-Dataset-shu-ju-ji.html", "labels": ["QuickNote"], "postTitle": "Pytorch\u590d\u4e60\u7cfb\u52172:Dataset\u6570\u636e\u96c6", "postUrl": "post/Pytorch-fu-xi-xi-lie-2-Dataset-shu-ju-ji.html", "postSourceUrl": "https://github.com/teamtee/teamtee.github.io/issues/5", "commentNum": 0, "wordCount": 6053, "description": "# \u524d\u8a00\r\n\r\nDataset\u662f\u5b58\u50a8\u6570\u636e\u7684\u96c6\u5408\uff0c\u3002", "top": 0, "createdAt": 1734790578, "style": "", "script": "", "head": "", "ogImage": "https://github.githubassets.com/favicons/favicon.svg", "createdDate": "2024-12-21", "dateLabelColor": "#bc4c00"}, "P6": {"htmlDir": "docs/post/Pytorch-fu-xi-xi-lie-3-nn.Parameters-can-shu.html", "labels": ["QuickNote"], "postTitle": "Pytorch\u590d\u4e60\u7cfb\u52173:nn.Parameters\u53c2\u6570", "postUrl": "post/Pytorch-fu-xi-xi-lie-3-nn.Parameters-can-shu.html", "postSourceUrl": "https://github.com/teamtee/teamtee.github.io/issues/6", "commentNum": 0, "wordCount": 2362, "description": "# \u524d\u8a00\r\n\r\nParameter\u548cBuffer\u90fd\u662f\u5b9e\u4f8b\u5316\u7684Tensor\uff0cParameter\u662f\u53c2\u4e0e\u68af\u5ea6\u8fd0\u7b97\u7684\u53c2\u6570\uff0cBuffer\u662f\u4e0d\u53c2\u4e0e\u68af\u5ea6\u8ba1\u7b97\u7684\u53c2\u6570\r\n\r\n`class Parameter(torch.Tensor, metaclass=_ParameterMeta):`\r\n\r\n- `Parameter`\u00a0\u662f\u4e00\u4e2a\u7279\u6b8a\u7684\u5f20\u91cf\uff0c\u5b83\u88ab\u7528\u6765\u8868\u793a\u6a21\u578b\u7684\u53c2\u6570,\u81ea\u52a8\u5c06\u00a0`Parameter`\u00a0\r\n\r\n `class Buffer(torch.Tensor, metaclass=_BufferMeta):`\r\n \r\n- `Buffer`\u00a0\u4e5f\u662f\u4e00\u4e2a\u7279\u6b8a\u7684\u5f20\u91cf\uff0c\u5b83\u7528\u4e8e\u5b58\u50a8\u90a3\u4e9b\u5728\u6a21\u578b\u4e2d\u4e0d\u76f4\u63a5\u53c2\u4e0e\u68af\u5ea6\u8ba1\u7b97\u7684\u6570\u636e\uff0c\u4f46\u53ef\u80fd\u5728\u6a21\u578b\u7684\u524d\u5411\u6216\u540e\u5411\u4f20\u64ad\u4e2d\u4f7f\u7528\u3002", "top": 0, "createdAt": 1735008754, "style": "", "script": "", "head": "", "ogImage": "https://github.githubassets.com/favicons/favicon.svg", "createdDate": "2024-12-24", "dateLabelColor": "#bc4c00"}, "P7": {"htmlDir": "docs/post/Pytorch-fu-xi-xi-lie-4-nn.Modules-mo-kuai.html", "labels": ["QuickNote"], "postTitle": "Pytorch\u590d\u4e60\u7cfb\u52174:nn.Modules\u6a21\u5757", "postUrl": "post/Pytorch-fu-xi-xi-lie-4-nn.Modules-mo-kuai.html", "postSourceUrl": "https://github.com/teamtee/teamtee.github.io/issues/7", "commentNum": 0, "wordCount": 11389, "description": "# \u524d\u8a00\r\nnn.Modules\u4e0b\u9762\u5305\u542b\u5f88\u591ann.Module\u7684\u5b9e\u4f8b\uff0cnn.Module\u662fPytorch\u6240\u6709\u795e\u7ecf\u7f51\u7edc\u7684\u7236\u7c7b\r\n\u53c2\u8003\r\n[1.PyTorch \u6e90\u7801\u89e3\u8bfb\u4e4b nn.Module\uff1a\u6838\u5fc3\u7f51\u7edc\u6a21\u5757\u63a5\u53e3\u8be6\u89e3](https://zhuanlan.zhihu.com/p/340453841)\r\n\r\n# nn.Module\u57fa\u672c\u5c5e\u6027\r\n\u5728Module\u7684__init__\u51fd\u6570\u4e2d\u53ef\u80fd\u89c2\u5bdf\u5230\u4e0b\u9762nn.Modules\u7684\u6838\u5fc3\u7ec4\u4ef6\r\n\r\n```python\r\nself.training = True  # \u63a7\u5236 training/testing \u72b6\u6001\r\nself._parameters = OrderedDict()  # \u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u4f1a\u968f\u7740 BP \u800c\u66f4\u65b0\u7684\u53c2\u6570\r\nself._buffers = OrderedDict()  # \u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u4e0d\u4f1a\u968f\u7740 BP \u800c\u66f4\u65b0\u7684\u53c2\u6570\r\nself._non_persistent_buffers_set = set()\r\nself._backward_hooks = OrderedDict()  # Backward \u5b8c\u6210\u540e\u4f1a\u88ab\u8c03\u7528\u7684 hook\r\nself._forward_hooks = OrderedDict()  # Forward \u5b8c\u6210\u540e\u4f1a\u88ab\u8c03\u7528\u7684 hook\r\nself._forward_pre_hooks = OrderedDict()  # Forward \u524d\u4f1a\u88ab\u8c03\u7528\u7684 hook\r\nself._state_dict_hooks = OrderedDict()  # \u5f97\u5230 state_dict \u4ee5\u540e\u4f1a\u88ab\u8c03\u7528\u7684 hook\r\nself._load_state_dict_pre_hooks = OrderedDict()  # load state_dict \u524d\u4f1a\u88ab\u8c03\u7528\u7684 hook\r\nself._modules = OrderedDict()  # \u5b50\u795e\u7ecf\u7f51\u7edc\u6a21\u5757\r\n```\r\n\r\n## \u57fa\u672c\u5c5e\u6027\r\n\u4e0b\u9762\u7684\u51fd\u6570\u53ef\u4ee5\u83b7\u53d6\u8fd9\u4e9b\u53c2\u6570\r\n- named_parameters\uff1a\u8fd4\u56de\u81ea\u8eabparameters,\u5982\u679c recurse=True \u8fd8\u4f1a\u8fd4\u56de\u5b50\u6a21\u5757\u4e2d\u7684\u6a21\u578b\u53c2\u6570\r\n- named_buffers\uff1a\u8fd4\u56de\u81ea\u8eabparameters,\u5982\u679c recurse=True \u8fd8\u4f1a\u8fd4\u56de\u5b50\u6a21\u5757\u4e2d\u7684\u6a21\u578b buffer\r\n- named_children\uff1a\u8fd4\u56de\u81ea\u8eab\u7684Modules\r\n-  named_modules\uff1a\u8fd4\u56de\u81ea\u8eab\u548c\u5b50Modules\u7684Moduels(\u9012\u5f52\u8c03\u7528)\r\n\r\n\u4e0b\u9762\u7684\u53c2\u6570\u662f\u5bf9\u4e0a\u9762\u7684\u8c03\u7528,\u9ed8\u8ba4recurse\u53c2\u6570\u4e3aTrue\r\n- parameters\uff1a\r\n-  buffers\uff1a\r\n-  children\uff1a\r\n-  modules\uff1a\r\n\u6dfb\u52a0\u53c2\u6570\r\n- add_module\uff1a\u589e\u52a0\u5b50\u795e\u7ecf\u7f51\u7edc\u6a21\u5757\uff0c\u66f4\u65b0 self._modules\r\n```\r\nadd_module(name,module)\r\n```\r\n-  register_parameter\uff1a\u589e\u52a0\u901a\u8fc7 BP \u53ef\u4ee5\u66f4\u65b0\u7684 parameters \uff08\u5982 BN \u548c Conv \u4e2d\u7684 weight \u548c bias \uff09\uff0c\u66f4\u65b0 self._parameters\r\n- register_buffer\uff1a\u589e\u52a0\u4e0d\u901a\u8fc7 BP \u66f4\u65b0\u7684 buffer\uff08\u5982 BN \u4e2d\u7684 running_mean \u548c running_var\uff09\r\n- self.xxx = xxx \uff1a\u8be5\u65b9\u6cd5\u4e0d\u4f1a\u88ab\u767b\u8bb0\uff0c\u4e0d\u5c5e\u4e8eParamets\u548cbuffer\uff0c\u8fdb\u884c\u72b6\u6001\u8f6c\u6362\u7684\u65f6\u5019\u4f1a\u88ab\u9057\u6f0f\r\n\u4e0b\u9762\u7684\u51fd\u6570\u53ef\u4ee5\u8c03\u6574\u68af\u5ea6\r\n- train()\r\n- eval()\r\n- requires_grad_()\r\n- zero_gred()\r\n\r\n\u4e0b\u9762\u7684\u51fd\u6570\u53ef\u4ee5\u6620\u5c04parameters\u548cbuffers\r\n- `_apply(fn)`:\u9488\u5bf9parameters\u548cbuffers\u901a\u8fc7\u8c03\u7528\u6240\u6709parameters\u548cbuffers\u7684tensor\u7684_apply\u51fd\u6570\u5b9e\u73b0\r\n\r\n```\r\n1. CPU\uff1a\u5c06\u6240\u6709 parameters \u548c buffer \u8f6c\u79fb\u5230 CPU \u4e0a\r\n2. type\uff1a\u5c06\u6240\u6709 parameters \u548c buffer \u8f6c\u53d8\u6210\u53e6\u4e00\u4e2a\u7c7b\u578b\r\n3. CUDA\uff1a\u5c06\u6240\u6709 parameters \u548c buffer \u8f6c\u79fb\u5230 GPU \u4e0a\r\n4. float\uff1a\u5c06\u6240\u6709\u6d6e\u70b9\u7c7b\u578b\u7684 parameters \u548c buffer \u8f6c\u53d8\u6210\u00a0float32\r\n5. double\uff1a\u5c06\u6240\u6709\u6d6e\u70b9\u7c7b\u578b\u7684 parameters \u548c buffer \u8f6c\u53d8\u6210 double \u7c7b\u578b\r\n6. half\uff1a\u5c06\u6240\u6709\u6d6e\u70b9\u7c7b\u578b\u7684 parameters \u548c buffer \u8f6c\u53d8\u6210 float16 \u7c7b\u578b\r\n8. to\uff1a\u79fb\u52a8\u6a21\u5757\u6216/\u548c\u6539\u53d8\u6a21\u5757\u7684\u7c7b\u578b\r\n```\r\n- `apply`:\u9488\u5bf9Moduels\uff0c\r\n\u53ef\u4ee5\u81ea\u5b9a\u4e49\u4e00\u4e2a init_weights \u51fd\u6570\uff0c\u901a\u8fc7\u00a0`net.apply(init_weights)`\u00a0\u6765\u521d\u59cb\u5316\u6a21\u578b\u6743\u91cd\u3002", "top": 0, "createdAt": 1735023260, "style": "<style>.markdown-alert{padding:0.5rem 1rem;margin-bottom:1rem;border-left:.25em solid var(--borderColor-default,var(--color-border-default));}.markdown-alert .markdown-alert-title {display:flex;font-weight:var(--base-text-weight-medium,500);align-items:center;line-height:1;}.markdown-alert>:first-child {margin-top:0;}.markdown-alert>:last-child {margin-bottom:0;}</style><style>.markdown-alert.markdown-alert-note {border-left-color:var(--borderColor-accent-emphasis, var(--color-accent-emphasis));background-color:var(--color-accent-subtle);}.markdown-alert.markdown-alert-note .markdown-alert-title {color: var(--fgColor-accent,var(--color-accent-fg));}</style>", "script": "<script>MathJax = {tex: {inlineMath: [[\"$\", \"$\"]]}};</script><script async src=\"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\"></script>", "head": "", "ogImage": "https://github.githubassets.com/favicons/favicon.svg", "createdDate": "2024-12-24", "dateLabelColor": "#bc4c00"}}, "singeListJson": {}, "labelColorDict": {"NoteList": "#ffffff", "QuickNote": "#0075ca", "ToolShare": "#d876e3"}, "ogImage": "https://github.githubassets.com/favicons/favicon.svg", "prevUrl": "disabled", "nextUrl": "disabled"}